<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java检查收取邮件</title>
      <link href="/2019/08/31/java-jian-cha-shou-qu-you-jian/"/>
      <url>/2019/08/31/java-jian-cha-shou-qu-you-jian/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang3<span class="token punctuation">.</span>StringUtils<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span>InternetAddress<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span>MimeMessage<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span>MimeUtility<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Properties<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 检查收取邮件 * * @author: 张勇波 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckEmail</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> MimeMessage mimeMessage <span class="token operator">=</span> null<span class="token punctuation">;</span>    <span class="token keyword">private</span> String saveAttachPath <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//附件下载后的存放目录,默认：d:\tmp 或 /tem</span>    <span class="token keyword">private</span> StringBuffer bodytext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//邮件内容</span>    <span class="token keyword">private</span> String dateformat <span class="token operator">=</span> <span class="token string">"yyyy-MM-dd HH:mm"</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//默认日期显示格式</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String host <span class="token operator">=</span> <span class="token string">"pop.exmail.qq.com"</span><span class="token punctuation">;</span>        String port <span class="token operator">=</span> <span class="token string">"110"</span><span class="token punctuation">;</span>        String email <span class="token operator">=</span> <span class="token string">"****@bis.com.cn"</span><span class="token punctuation">;</span>        String emailPWD <span class="token operator">=</span> <span class="token string">"*******"</span><span class="token punctuation">;</span>        Message message<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> CheckEmail<span class="token punctuation">.</span><span class="token function">checkEmail</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">,</span> email<span class="token punctuation">,</span> emailPWD<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Messages's length: "</span> <span class="token operator">+</span> message<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>        CheckEmail ce<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> message<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ce <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckEmail</span><span class="token punctuation">(</span><span class="token punctuation">(</span>MimeMessage<span class="token punctuation">)</span> message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ce<span class="token punctuation">.</span><span class="token function">isNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//                ce.setDateFormat("yyyy年MM月dd日 HH:mm");</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 邮件主题: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 邮件发送日期: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getSentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 是否需要回执: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getReplySign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//                System.out.println("Message " + i + " 是否已读: " + ce.isNew());  //pop3不支持若是已读 则不处理后续</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 是否包含附件: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">isContainAttach</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 发件人: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 收件人: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getMailAddress</span><span class="token punctuation">(</span><span class="token string">"to"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 抄送: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getMailAddress</span><span class="token punctuation">(</span><span class="token string">"cc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" 密送: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getMailAddress</span><span class="token punctuation">(</span><span class="token string">"bcc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" Message-ID: "</span> <span class="token operator">+</span> ce<span class="token punctuation">.</span><span class="token function">getMessageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Message "</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">" MessageNumber: "</span> <span class="token operator">+</span> message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getMessageNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//                ce.getMailContent(message[i]);// 获得邮件正文</span><span class="token comment" spellcheck="true">//                System.out.println("Message " + i + " 正文: \r\n" + ce.getBodyText());</span><span class="token comment" spellcheck="true">//                ce.setAttachPath("d:\\");//设置附件保存路径</span><span class="token comment" spellcheck="true">//                ce.saveAttachMent(message[i]);//保存附件</span><span class="token comment" spellcheck="true">//                if (i == 10) break;</span><span class="token comment" spellcheck="true">//                message[i].setFlag(Flags.Flag.SEEN, true);//设置为已读，pop3不能使用。。。。</span><span class="token comment" spellcheck="true">//                message[i].saveChanges();</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取邮件信息     *     * @param host     mail.pop3.port     * @param port     mail.pop3.port     * @param email    邮箱地址     * @param emailPWD 邮箱密码     * @return Message[] 邮件信息数组     * 如需获取邮件正文，需要getMailContent(message[i])后getBodyText()     * 如需保存附件 saveAttachMent(message[i])     * @throws MessagingException 收取邮件错误     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">checkEmail</span><span class="token punctuation">(</span>String host<span class="token punctuation">,</span> String port<span class="token punctuation">,</span> String email<span class="token punctuation">,</span> String emailPWD<span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        Properties props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.store.protocol"</span><span class="token punctuation">,</span> <span class="token string">"pop3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.pop3.port"</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span>        props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.pop3.host"</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        props.setProperty("mail.store.protocol", "imap");</span><span class="token comment" spellcheck="true">//        props.setProperty("mail.imap.port", port);</span><span class="token comment" spellcheck="true">//        props.setProperty("mail.imap.host", host);</span><span class="token comment" spellcheck="true">//        props.setProperty("mail.imap.auth", "true");</span>        Session session <span class="token operator">=</span> Session<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>        Store store <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getStore</span><span class="token punctuation">(</span><span class="token string">"pop3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        store<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>email<span class="token punctuation">,</span> emailPWD<span class="token punctuation">)</span><span class="token punctuation">;</span>        Folder folder <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getFolder</span><span class="token punctuation">(</span><span class="token string">"INBOX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        folder<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>Folder<span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"mail.mime.multipart.ignoreexistingboundaryparameter"</span><span class="token punctuation">,</span> <span class="token string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----getUnreadMessageCount----"</span> <span class="token operator">+</span> folder<span class="token punctuation">.</span><span class="token function">getMessageCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Message message<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> folder<span class="token punctuation">.</span><span class="token function">getMessages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> message<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token function">CheckEmail</span><span class="token punctuation">(</span>MimeMessage mimeMessage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>mimeMessage <span class="token operator">=</span> mimeMessage<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置附件存放路径     *     * @param attachpath 附件路径     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAttachPath</span><span class="token punctuation">(</span>String attachpath<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>saveAttachPath <span class="token operator">=</span> attachpath<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 设置日期显示格式     *     * @param format 如yyyy-MM-dd HH:mm     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDateFormat</span><span class="token punctuation">(</span>String format<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>dateformat <span class="token operator">=</span> format<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得附件存放路径     *     * @return 附件存放路径     */</span>    <span class="token keyword">public</span> String <span class="token function">getAttachPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> saveAttachPath<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得发件人的地址和姓名     *     * @return 名称＜地址＞     * @throws MessagingException 获取发件人错误     */</span>    <span class="token keyword">public</span> String <span class="token function">getFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        InternetAddress address<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getFrom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String from <span class="token operator">=</span> address<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>from <span class="token operator">==</span> null<span class="token punctuation">)</span>            from <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        String personal <span class="token operator">=</span> address<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getPersonal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>personal <span class="token operator">==</span> null<span class="token punctuation">)</span>            personal <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        String fromaddr <span class="token operator">=</span> personal <span class="token operator">+</span> <span class="token string">"&lt;"</span> <span class="token operator">+</span> from <span class="token operator">+</span> <span class="token string">">"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> fromaddr<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 对格式有误的邮件地址进行解析处理     *     * @param num 地址数组     * @return     */</span>    <span class="token keyword">private</span> InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAddress</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>        InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> address<span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>InternetAddress<span class="token operator">></span> addresses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>InternetAddress<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String s <span class="token operator">:</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> to2 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String s2 <span class="token operator">:</span> to2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                InternetAddress internetAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                String<span class="token punctuation">[</span><span class="token punctuation">]</span> mail <span class="token operator">=</span> s2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&lt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>StringUtils<span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>mail<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        internetAddress<span class="token punctuation">.</span><span class="token function">setPersonal</span><span class="token punctuation">(</span>mail<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">try</span> <span class="token punctuation">{</span>                        internetAddress<span class="token punctuation">.</span><span class="token function">setPersonal</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                internetAddress<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>mail<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                addresses<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>internetAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> ia <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">[</span>addresses<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        address <span class="token operator">=</span> addresses<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>ia<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得邮件的收件人，抄送，和密送的地址和姓名，根据所传递的参数的不同     *     * @param type 接收方类型     *             "to"----收件人     *             "cc"---抄送人地址     *             "bcc"---密送人地址     * @return 名称＜地址＞     * @throws Exception 获取收件人错误     */</span>    <span class="token keyword">public</span> String <span class="token function">getMailAddress</span><span class="token punctuation">(</span>String type<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        StringBuilder mailaddr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String addtype <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> address<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>addtype<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"TO"</span><span class="token punctuation">)</span> <span class="token operator">||</span> addtype<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"CC"</span><span class="token punctuation">)</span> <span class="token operator">||</span> addtype<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"BCC"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>addtype<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"TO"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    address <span class="token operator">=</span> <span class="token punctuation">(</span>InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getRecipients</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>TO<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MessagingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String<span class="token punctuation">[</span><span class="token punctuation">]</span> to <span class="token operator">=</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>TO<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    address <span class="token operator">=</span> <span class="token function">getAddress</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>addtype<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"CC"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    address <span class="token operator">=</span> <span class="token punctuation">(</span>InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getRecipients</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>CC<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MessagingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String<span class="token punctuation">[</span><span class="token punctuation">]</span> cc <span class="token operator">=</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>CC<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    address <span class="token operator">=</span> <span class="token function">getAddress</span><span class="token punctuation">(</span>cc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    address <span class="token operator">=</span> <span class="token punctuation">(</span>InternetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getRecipients</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>BCC<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MessagingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String<span class="token punctuation">[</span><span class="token punctuation">]</span> bcc <span class="token operator">=</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span>Message<span class="token punctuation">.</span>RecipientType<span class="token punctuation">.</span>BCC<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    address <span class="token operator">=</span> <span class="token function">getAddress</span><span class="token punctuation">(</span>bcc<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> address<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    String email <span class="token operator">=</span> address<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>email <span class="token operator">==</span> null<span class="token punctuation">)</span>                        email <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">else</span> <span class="token punctuation">{</span>                        email <span class="token operator">=</span> MimeUtility<span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">">>"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">">"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"\r\n\t"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    String personal <span class="token operator">=</span> address<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getPersonal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>personal <span class="token operator">==</span> null<span class="token punctuation">)</span>                        personal <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">else</span> <span class="token punctuation">{</span>                        personal <span class="token operator">=</span> MimeUtility<span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>personal<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"&amp;#39;"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"'"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">"\""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    String compositeto <span class="token operator">=</span> personal <span class="token operator">+</span> <span class="token string">"&lt;"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">">"</span><span class="token punctuation">;</span>                    mailaddr<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>compositeto<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                mailaddr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>mailaddr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"getMailAddress 没有此类型收件人!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> mailaddr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得邮件主题     *     * @return 邮件主题     * @throws MessagingException           获取主题错误     * @throws UnsupportedEncodingException 转换文本错误     */</span>    <span class="token keyword">public</span> String <span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException<span class="token punctuation">,</span> UnsupportedEncodingException <span class="token punctuation">{</span>        String subject <span class="token operator">=</span> MimeUtility<span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>mimeMessage<span class="token punctuation">.</span><span class="token function">getSubject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> subject <span class="token operator">==</span> null <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> subject<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得邮件发送日期     *     * @return 邮件发送日期     * @throws MessagingException 获取邮件发送日期错误     */</span>    <span class="token keyword">public</span> String <span class="token function">getSentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        Date sentdate <span class="token operator">=</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getSentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        SimpleDateFormat format <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span>dateformat<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> format<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>sentdate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得邮件正文内容     *     * @return 邮件正文内容     */</span>    <span class="token keyword">public</span> String <span class="token function">getBodyText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> bodytext<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 解析邮件，把得到的邮件内容保存到一个StringBuffer对象中，     * 解析邮件 主要是根据MimeType类型的不同执行不同的操作，一步一步的解析     *     * @param part 附件对象     * @throws Exception 邮件解析错误     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getMailContent</span><span class="token punctuation">(</span>Part part<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String contenttype <span class="token operator">=</span> part<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> nameindex <span class="token operator">=</span> contenttype<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">boolean</span> conname <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nameindex <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            conname <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--getMailContent--ContentType: "</span> <span class="token operator">+</span> contenttype<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"text/plain"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>conname<span class="token punctuation">)</span> <span class="token punctuation">{</span>            bodytext<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"text/html"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>conname<span class="token punctuation">)</span> <span class="token punctuation">{</span>            bodytext<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"multipart/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Multipart multipart <span class="token operator">=</span> <span class="token punctuation">(</span>Multipart<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> counts <span class="token operator">=</span> multipart<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> counts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">getMailContent</span><span class="token punctuation">(</span>multipart<span class="token punctuation">.</span><span class="token function">getBodyPart</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"message/rfc822"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">getMailContent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Part<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 判断此邮件是否需要回执，如果需要回执返回<span class="token string">"true"</span><span class="token punctuation">,</span>否则返回<span class="token string">"false"</span>     <span class="token operator">*</span>     <span class="token operator">*</span> @<span class="token keyword">return</span> 是否需要回执     <span class="token operator">*</span> @<span class="token keyword">throws</span> MessagingException 邮件获取错误     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getReplySign</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> replysign <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        String needreply<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"Disposition-Notification-To"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>needreply <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            replysign <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> replysign<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获得此邮件的Message-ID     *     * @return Message-ID     * @throws MessagingException 邮件获取错误     */</span>    <span class="token keyword">public</span> String <span class="token function">getMessageId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        <span class="token keyword">return</span> mimeMessage<span class="token punctuation">.</span><span class="token function">getMessageID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 判断此邮件是否已读，如果未读返回返回false,反之返回true     *     * @return 是否已读     * @throws MessagingException 邮件获取错误     */</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> MessagingException <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> isnew <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        Flags flags <span class="token operator">=</span> <span class="token punctuation">(</span>mimeMessage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Flags<span class="token punctuation">.</span>Flag<span class="token punctuation">[</span><span class="token punctuation">]</span> flag <span class="token operator">=</span> flags<span class="token punctuation">.</span><span class="token function">getSystemFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> flag<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> Flags<span class="token punctuation">.</span>Flag<span class="token punctuation">.</span>SEEN<span class="token punctuation">)</span> <span class="token punctuation">{</span>                isnew <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> isnew<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 判断此邮件是否包含附件     *     * @param part 附件对象     * @return 是否包含附件     * @throws Exception 邮件附件判断错误     */</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isContainAttach</span><span class="token punctuation">(</span>Part part<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">boolean</span> attachflag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"multipart/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Multipart mp <span class="token operator">=</span> <span class="token punctuation">(</span>Multipart<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mp<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                BodyPart mpart <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getBodyPart</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                String disposition <span class="token operator">=</span> mpart<span class="token punctuation">.</span><span class="token function">getDisposition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>disposition <span class="token operator">!=</span> null<span class="token punctuation">)</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>disposition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>Part<span class="token punctuation">.</span>ATTACHMENT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>disposition                        <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>Part<span class="token punctuation">.</span>INLINE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    attachflag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mpart<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"multipart/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    attachflag <span class="token operator">=</span> <span class="token function">isContainAttach</span><span class="token punctuation">(</span>mpart<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    String contype <span class="token operator">=</span> mpart<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>contype<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"application"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                        attachflag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>contype<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                        attachflag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"message/rfc822"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            attachflag <span class="token operator">=</span> <span class="token function">isContainAttach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Part<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> attachflag<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 保存附件     <span class="token operator">*</span>     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> part 附件对象     <span class="token operator">*</span> @<span class="token keyword">throws</span> Exception 邮件保存错误     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveAttachMent</span><span class="token punctuation">(</span>Part part<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String fileName<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"multipart/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            Multipart mp <span class="token operator">=</span> <span class="token punctuation">(</span>Multipart<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mp<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                BodyPart mpart <span class="token operator">=</span> mp<span class="token punctuation">.</span><span class="token function">getBodyPart</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                String disposition <span class="token operator">=</span> mpart<span class="token punctuation">.</span><span class="token function">getDisposition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>disposition <span class="token operator">!=</span> null<span class="token punctuation">)</span>                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>disposition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>Part<span class="token punctuation">.</span>ATTACHMENT<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token operator">||</span> <span class="token punctuation">(</span>disposition<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>Part<span class="token punctuation">.</span>INLINE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    fileName <span class="token operator">=</span> mpart<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileName <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"gb2312"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    fileName <span class="token operator">=</span> MimeUtility<span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">/</span>                    <span class="token punctuation">}</span>                    <span class="token function">saveFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> mpart<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mpart<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"multipart/*"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">saveAttachMent</span><span class="token punctuation">(</span>mpart<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    fileName <span class="token operator">=</span> mpart<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fileName <span class="token operator">!=</span> null<span class="token punctuation">)</span>                            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"GB2312"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"gb18030"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        fileName <span class="token operator">=</span> MimeUtility<span class="token punctuation">.</span><span class="token function">decodeText</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">saveFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> mpart<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>part<span class="token punctuation">.</span><span class="token function">isMimeType</span><span class="token punctuation">(</span><span class="token string">"message/rfc822"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">saveAttachMent</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Part<span class="token punctuation">)</span> part<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span>     <span class="token operator">*</span> 真正的保存附件到指定目录里     <span class="token operator">*</span>     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> fileName 文件名     <span class="token operator">*</span> <span class="token annotation punctuation">@param</span> in       附件InputStream对象     <span class="token operator">*</span> @<span class="token keyword">throws</span> Exception 附件保存错误     <span class="token operator">*</span><span class="token operator">/</span>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">saveFile</span><span class="token punctuation">(</span>String fileName<span class="token punctuation">,</span> InputStream in<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        String osName <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"os.name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String storedir <span class="token operator">=</span> <span class="token function">getAttachPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>osName <span class="token operator">==</span> null<span class="token punctuation">)</span>            osName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>osName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>storedir <span class="token operator">==</span> null <span class="token operator">||</span> storedir<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                storedir <span class="token operator">=</span> <span class="token string">"d:\\tmp"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            storedir <span class="token operator">=</span> <span class="token string">"/tmp"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        File storefile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>storedir <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"file.separator"</span><span class="token punctuation">)</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--saveFile--附件保存路径: "</span> <span class="token operator">+</span> storefile<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        BufferedOutputStream bos <span class="token operator">=</span> null<span class="token punctuation">;</span>        BufferedInputStream bis <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            bos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>storefile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> c<span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> bis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                bos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>                bos<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> exception<span class="token punctuation">)</span> <span class="token punctuation">{</span>            exception<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">"文件保存失败!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">assert</span> bos <span class="token operator">!=</span> null<span class="token punctuation">;</span>            bos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">assert</span> bis <span class="token operator">!=</span> null<span class="token punctuation">;</span>            bis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JMail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activiti ie下保存模型问题</title>
      <link href="/2019/08/31/activiti-ie-xia-bao-cun-mo-xing-wen-ti/"/>
      <url>/2019/08/31/activiti-ie-xia-bao-cun-mo-xing-wen-ti/</url>
      
        <content type="html"><![CDATA[<p><strong>错误：Enclosed Exception: 元素类型 “path” 必须后跟属性规范 “&gt;” 或 “/&gt;”</strong></p><p>modeler作图使用svg（可缩放矢量图形），在ie中如果使用了箭头（即svg中的path元素），则model保存不成功，提示错误<code>Unexpected error: could not save model</code>，IDE console中提示：<code>元素类型 &quot;path&quot; 必须后跟属性规范 &quot;&gt;&quot; 或 &quot;/&gt;&quot;</code>。在ie  F12开启调试模式，与chrome对比发现是因为modeler.html中的path的<code>marker-start</code>和<code>marker-end</code>属性值多了引号，导致在保存时path出错。</p><p>IE：</p><pre><code>&lt;path xmlns=&quot;http://www.w3.org/2000/svg&quot; id=&quot;sid-7278F570-B74E-4EE6-A21A-52A3B3BF3C26_1&quot; fill=&quot;none&quot; marker-end=&quot;url(&amp;quot;#sid-7278F570-B74E-4EE6-A21A-52A3B3BF3C26end&amp;quot;)&quot; marker-start=&quot;url(&amp;quot;#sid-7278F570-B74E-4EE6-A21A-52A3B3BF3C26start&amp;quot;)&quot; stroke=&quot;#585858&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M 355.391 135 L 399.375 135&quot;/&gt;</code></pre><p>chrome：</p><pre><code>&lt;path id=&quot;sid-CB6F9DD4-D150-4072-8EF6-75B5AE54E9BF_1&quot; d=&quot;M210.609375 135L254.15625 135 &quot; stroke=&quot;#585858&quot; fill=&quot;none&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; marker-start=&quot;url(#sid-CB6F9DD4-D150-4072-8EF6-75B5AE54E9BFstart)&quot; marker-end=&quot;url(#sid-CB6F9DD4-D150-4072-8EF6-75B5AE54E9BFend)&quot;&gt;&lt;/path&gt;</code></pre><p>对比可知，chrome中的<code>setAttributeNS</code>函数不会对url()做特殊处理，而IE中会对url()中的字符用引号包裹！在此设置断点重新画一个path后，发现引号删不掉（nodevalue无法修改为无引号），把值设置为url(bbbb)会自动变为url(“bbbb”)！</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>在<code>toolbar-default-actions.js</code>中的<code>$scope.save = function (successCallback){}</code>函数中增加以下红色代码：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> svgDOM <span class="token operator">=</span> DataManager<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>svgClone<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解决ie保存报错</span>svgDOM <span class="token operator">=</span> svgDOM<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/marker-start="url\("#/g</span><span class="token punctuation">,</span><span class="token string">"marker-start=\"url(#"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/start"\)"/g</span><span class="token punctuation">,</span><span class="token string">"start\)\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>svgDOM <span class="token operator">=</span> svgDOM<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/marker-mid="url\("#/g</span><span class="token punctuation">,</span><span class="token string">"marker-mid=\"url(#"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/mid"\)"/g</span><span class="token punctuation">,</span><span class="token string">"mid\)\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>svgDOM <span class="token operator">=</span> svgDOM<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/marker-end="url\("#/g</span><span class="token punctuation">,</span><span class="token string">"marker-end=\"url(#"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/end"\)"/g</span><span class="token punctuation">,</span><span class="token string">"end\)\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//解决ie保存报错</span></code></pre><p>接下来清除缓存即可</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Activiti </tag>
            
            <tag> 转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA后台调用http接口</title>
      <link href="/2019/08/31/java-hou-tai-diao-yong-http-jie-kou/"/>
      <url>/2019/08/31/java-hou-tai-diao-yong-http-jie-kou/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStreamReader<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>PrintWriter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>HttpURLConnection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URL<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URLEncoder<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Iterator<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 调用http接口 * Created by 张勇波 on 2017/12/12. */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpURL</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 调用http接口     *     * @param strPostURL  url地址     * @param map         参数集合     * @param method      GET, POST, HEAD, OPTIONS, PUT, DELETE, TRACE     * @param contentType 请求类型     *                    "application/x-javascript" json数据     *                    "text/xml" xml数据     *                    "application/x-www-form-urlencoded" 表单数据 浏览器默认类型     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">httpURLConnection</span><span class="token punctuation">(</span>String strPostURL<span class="token punctuation">,</span> Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map<span class="token punctuation">,</span> String contentType<span class="token punctuation">,</span> String method<span class="token punctuation">)</span> <span class="token punctuation">{</span>        contentType <span class="token operator">=</span>                contentType <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> contentType<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> contentType <span class="token operator">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            method <span class="token operator">=</span> method <span class="token operator">!=</span> null <span class="token operator">?</span> method <span class="token operator">:</span> <span class="token string">"POST"</span><span class="token punctuation">;</span>            URL url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>strPostURL<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 将url 以 open方法返回的urlConnection  连接强转为HttpURLConnection连接  (标识一个url所引用的远程对象连接)</span>            HttpURLConnection connection <span class="token operator">=</span> <span class="token punctuation">(</span>HttpURLConnection<span class="token punctuation">)</span> url<span class="token punctuation">.</span><span class="token function">openConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 此时cnnection只是为一个连接对象,待连接中</span>            <span class="token comment" spellcheck="true">// 设置连接输出流为true,默认false (post 请求是以流的方式隐式的传递参数)</span>            connection<span class="token punctuation">.</span><span class="token function">setDoOutput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置连接输入流为true</span>            connection<span class="token punctuation">.</span><span class="token function">setDoInput</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置请求方式</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// post请求缓存设为false</span>            connection<span class="token punctuation">.</span><span class="token function">setUseCaches</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置该HttpURLConnection实例是否自动执行重定向</span>            connection<span class="token punctuation">.</span><span class="token function">setInstanceFollowRedirects</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 设置请求头里面的各个属性 (以下为设置内容的类型,设置为经过urlEncoded编码过的from参数)</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"*/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"connection"</span><span class="token punctuation">,</span> <span class="token string">"Keep-Alive"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"user-agent"</span><span class="token punctuation">,</span> <span class="token string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> contentType <span class="token operator">+</span> <span class="token string">";charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"charset"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                Iterator iter <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Map<span class="token punctuation">.</span>Entry entry <span class="token operator">=</span> <span class="token punctuation">(</span>Map<span class="token punctuation">.</span>Entry<span class="token punctuation">)</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    Object key <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    Object val <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> val<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span> val<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                connection<span class="token punctuation">.</span><span class="token function">setRequestProperty</span><span class="token punctuation">(</span><span class="token string">"Content-length"</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 创建输入输出流,用于往连接里面输出携带的参数,(输出内容为?后面的内容)</span>                PrintWriter printWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 将参数输出到连接</span>                printWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 输出完成后刷新并关闭流</span>                printWriter<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 重要且易忽略步骤 (关闭流,切记!)</span>                printWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 建立连接 (请求未开始,直到connection.getInputStream()方法调用时才发起,以上各个参数设置需在此方法之前进行)</span>            connection<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 连接发起请求,处理服务器响应  (从连接获取到输入流并包装为bufferedReader)</span>            BufferedReader bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>connection<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String line<span class="token punctuation">;</span>            StringBuilder result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 用来存储响应数据</span>            <span class="token comment" spellcheck="true">// 循环读取流,若不到结尾处</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>                result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"line.separator"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            bf<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 重要且易忽略步骤 (关闭流,切记!)</span>            connection<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 销毁连接</span>            <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"httpURLConnection调用失败"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activiti获取模型图片或部署图片</title>
      <link href="/2019/08/31/activiti-huo-qu-mo-xing-tu-pian-huo-bu-shu-tu-pian/"/>
      <url>/2019/08/31/activiti-huo-qu-mo-xing-tu-pian-huo-bu-shu-tu-pian/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 获取流程图片base64码 * 已添加“data:image/png;base64,” * * @param deploymentId model的id/部署id * @param type         传入参数类型 deploy/model * @return 图片base64码 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/imageBase64"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">imageBase64</span><span class="token punctuation">(</span>String deploymentId<span class="token punctuation">,</span> String type<span class="token punctuation">)</span> <span class="token punctuation">{</span>    String image <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"deploy"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 从仓库中找需要展示的文件</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> names <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getDeploymentResourceNames</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">)</span><span class="token punctuation">;</span>        String imageName <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String name <span class="token operator">:</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">".png"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                imageName <span class="token operator">=</span> name<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 通过部署ID和文件名称得到文件的输入流</span>        InputStream in <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">,</span> imageName<span class="token punctuation">)</span><span class="token punctuation">;</span>        image <span class="token operator">=</span> Base64Convert<span class="token punctuation">.</span><span class="token function">getBase64FromInputStream</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"model"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//模型模块</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getModelEditorSourceExtra</span><span class="token punctuation">(</span>deploymentId<span class="token punctuation">)</span><span class="token punctuation">;</span>        image <span class="token operator">=</span> Base64<span class="token punctuation">.</span><span class="token function">encodeBase64String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token string">"data:image/png;base64,"</span> <span class="token operator">+</span> image<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Activiti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activiti获取流程跟踪图</title>
      <link href="/2019/08/31/activiti-huo-qu-liu-cheng-gen-zong-tu/"/>
      <url>/2019/08/31/activiti-huo-qu-liu-cheng-gen-zong-tu/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 根据流程实例id，获取流程实时跟踪图片Base64码 * 已添加“data:image/png;base64,” * * @param processInstanceId 流程实例id * @return 图片base64码 */</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/generateProcessImageBase64"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">generateProcessImageBase64</span><span class="token punctuation">(</span>String processInstanceId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//获取历史流程实例</span>    HistoricProcessInstance historicProcessInstance <span class="token operator">=</span> historyService<span class="token punctuation">.</span><span class="token function">createHistoricProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取历史流程定义</span>    ProcessDefinitionEntity processDefinitionEntity <span class="token operator">=</span> <span class="token punctuation">(</span>ProcessDefinitionEntity<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>RepositoryServiceImpl<span class="token punctuation">)</span>            repositoryService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeployedProcessDefinition</span><span class="token punctuation">(</span>historicProcessInstance<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//查询历史节点，需要按照执行顺序排序，因为程序中需要判断流程最后的节点是否为结束节点</span>    <span class="token comment" spellcheck="true">//按照开始时间进行升序</span>    List<span class="token operator">&lt;</span>HistoricActivityInstance<span class="token operator">></span> historicActivityInstanceList <span class="token operator">=</span> historyService            <span class="token punctuation">.</span><span class="token function">createHistoricActivityInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">orderByHistoricActivityInstanceStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//已执行历史节点</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> executedActivityIdList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>HistoricActivityInstance historicActivityInstance <span class="token operator">:</span> historicActivityInstanceList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        executedActivityIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>historicActivityInstance<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    BpmnModel bpmnModel <span class="token operator">=</span> repositoryService<span class="token punctuation">.</span><span class="token function">getBpmnModel</span><span class="token punctuation">(</span>processDefinitionEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//已执行flow的集和</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> executedFlowIdList <span class="token operator">=</span> <span class="token function">executedFlowIdList</span><span class="token punctuation">(</span>bpmnModel<span class="token punctuation">,</span> historicActivityInstanceList<span class="token punctuation">)</span><span class="token punctuation">;</span>    ProcessDiagramGenerator processDiagramGenerator <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">getProcessDiagramGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    InputStream inputStream <span class="token operator">=</span> processDiagramGenerator<span class="token punctuation">.</span><span class="token function">generateDiagram</span><span class="token punctuation">(</span>bpmnModel<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> executedActivityIdList<span class="token punctuation">,</span>            executedFlowIdList<span class="token punctuation">,</span> processEngine<span class="token punctuation">.</span><span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getActivityFontName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            processEngine<span class="token punctuation">.</span><span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLabelFontName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> processEngine                    <span class="token punctuation">.</span><span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotationFontName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> processEngine                    <span class="token punctuation">.</span><span class="token function">getProcessEngineConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    String image <span class="token operator">=</span> Base64Convert<span class="token punctuation">.</span><span class="token function">getBase64FromInputStream</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//返回添加png图片的base64标识</span>    <span class="token keyword">return</span> <span class="token string">"data:image/png;base64,"</span> <span class="token operator">+</span> image<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/** * 已执行flow集合 * * @param bpmnModel                    模型 * @param historicActivityInstanceList 已执行的节点，需要按照执行顺序排序，因为程序中需要判断流程最后的节点是否为结束节点 * @return 已执行的flow */</span><span class="token keyword">private</span> <span class="token keyword">static</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">executedFlowIdList</span><span class="token punctuation">(</span>BpmnModel bpmnModel<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>HistoricActivityInstance<span class="token operator">></span>        historicActivityInstanceList<span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>String<span class="token operator">></span> executedFlowIdList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"endEvent"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">getActivityType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        count <span class="token operator">=</span> historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        count <span class="token operator">=</span> historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        HistoricActivityInstance hai <span class="token operator">=</span> historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        FlowNode flowNode <span class="token operator">=</span> <span class="token punctuation">(</span>FlowNode<span class="token punctuation">)</span> bpmnModel<span class="token punctuation">.</span><span class="token function">getFlowElement</span><span class="token punctuation">(</span>hai<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>SequenceFlow<span class="token operator">></span> sequenceFlows <span class="token operator">=</span> flowNode<span class="token punctuation">.</span><span class="token function">getOutgoingFlows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sequenceFlows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            HistoricActivityInstance nextHai <span class="token operator">=</span> historicActivityInstanceList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>SequenceFlow sequenceFlow <span class="token operator">:</span> sequenceFlows<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>sequenceFlow<span class="token punctuation">.</span><span class="token function">getTargetRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nextHai<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    executedFlowIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sequenceFlow<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>sequenceFlows<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>                executedFlowIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sequenceFlows<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> executedFlowIdList<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Activiti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activiti流程跟踪图连接线文字不显示问题</title>
      <link href="/2019/08/31/activiti-liu-cheng-gen-zong-tu-lian-jie-xian-wen-zi-bu-xian-shi-wen-ti/"/>
      <url>/2019/08/31/activiti-liu-cheng-gen-zong-tu-lian-jie-xian-wen-zi-bu-xian-shi-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>需要反编译流程图片处理类，新建同包同名类，复制反编译内容，添加连接线文字处理。<br><code>activiti-image-generator-5.22.0.jar!/org/activiti/image/impl/DefaultProcessDiagramGenerator.class</code><br>587行左右<code>if(labelGraphicInfo != null) {</code>添加else处理。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>labelGraphicInfo <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>    processDiagramCanvas<span class="token punctuation">.</span><span class="token function">drawLabel</span><span class="token punctuation">(</span>sequenceFlow<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> labelGraphicInfo<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//反编译class得到，主要处理线文字不显示</span>    GraphicInfo lineCenter <span class="token operator">=</span> <span class="token function">getLineCenter</span><span class="token punctuation">(</span>graphicInfoList<span class="token punctuation">)</span><span class="token punctuation">;</span>    processDiagramCanvas<span class="token punctuation">.</span><span class="token function">drawLabel</span><span class="token punctuation">(</span>sequenceFlow<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lineCenter<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Activiti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cron表达式生成器</title>
      <link href="/2019/08/31/cron-biao-da-shi-sheng-cheng-qi/"/>
      <url>/2019/08/31/cron-biao-da-shi-sheng-cheng-qi/</url>
      
        <content type="html"><![CDATA[<p>本功能取自<code>http://cron.qqe2.com</code>网站在线生成功能。因需要纯前端功能，所以去除了后台加载的<strong>最近5次运行时间</strong><br>。同时添加了cron表达式的校验功能，判断表达式的有效性。<br><img src="https://raw.githubusercontent.com/zhangyongbo/pic/master/picgo/1567227594576_2.png" alt="Cron表达式生成器界面"></p><p><a href="https://pan.baidu.com/s/1ZXG9FK-Q6QnB8X2ELiSiTA" target="_blank" rel="noopener">点击下载代码</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关闭Mac OS系统程序崩溃报告</title>
      <link href="/2019/08/28/guan-bi-mac-os-xi-tong-cheng-xu-beng-kui-bao-gao/"/>
      <url>/2019/08/28/guan-bi-mac-os-xi-tong-cheng-xu-beng-kui-bao-gao/</url>
      
        <content type="html"><![CDATA[<h1 id="关闭崩溃报告显示"><a href="#关闭崩溃报告显示" class="headerlink" title="关闭崩溃报告显示"></a>关闭崩溃报告显示</h1><p>如果你希望关闭崩溃报告窗口在桌面的显示，只需在「终端」中输入如下命令，回车确认即可。下次如果有应用程序崩溃或意外退出，崩溃报告将不再会在桌面中显示：</p><pre class=" language-shell"><code class="language-shell">defaults write com.apple.CrashReporter DialogType none</code></pre><p>恢复成默认的对话框形式的话，只需执行如下命令：</p><pre class=" language-shell"><code class="language-shell">defaults write com.apple.CrashReporter DialogType crashreport</code></pre><h1 id="让崩溃报告在「通知中心」显示"><a href="#让崩溃报告在「通知中心」显示" class="headerlink" title="让崩溃报告在「通知中心」显示"></a>让崩溃报告在「通知中心」显示</h1><p>如果你希望让崩溃报告在「通知中心」显示，只需在「终端」中输入如下命令，回车确认即可。下次如果有应用程序崩溃或意外退出，崩溃报告将以通知的形式显示在屏幕右上角：</p><pre class=" language-shell"><code class="language-shell">defaults write com.apple.CrashReporter UseUNC 1</code></pre><p>恢复成默认的对话框形式的话，只需执行如下命令：</p><pre class=" language-shell"><code class="language-shell">defaults write com.apple.CrashReporter UseUNC 0</code></pre><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>通常来说，最好让崩溃报告保持默认显示设置，因为发送崩溃报告给 Apple 或软件开发商能够帮助其调试和修正错误。但如果你并不喜欢的话，那就根据个人偏好修改默认设置好了。</p><p>需要特别说明的是，不论是关闭崩溃报告在桌面的显示，还是令其在「通知中心」显示，都不会对崩溃报告本身造成任何影响。前述命令只不过是令其不再在用户界面显示，或让其换一种方式显示罢了。通过「控制台」或点击崩溃报告通知，我们依然能够正常查看到相关信息。</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效用Google</title>
      <link href="/2019/08/28/gao-xiao-yong-google/"/>
      <url>/2019/08/28/gao-xiao-yong-google/</url>
      
        <content type="html"><![CDATA[<p>如果票选近二十年最伟大的发明，我相信搜索引擎肯定会占据一个不容小觑的位置，它不单是一项发明，更是一项成就，最大程度消灭了信息的不平等。既然人人都可以接触到海量的信息，那么衡量信息财富多寡就只剩下技巧这惟一的标准了：<strong>善用搜索引擎的都是信息时代的富翁，不懂搜索引擎的都是信息时代的负翁</strong>。</p><p>而像程序员这种必须终生学习的职业，搜索引擎就是我们的左膀右臂。懂搜索引擎就是我们的基本功，不，应该是童子功。只是大部分新手都在过分粗放的使用搜索引擎，而花几分钟时间了解搜索引擎的技巧和语法，就能让自己的信息财富来一个大跃进，不也是一笔划算的买卖么。</p><p>而对于技术类问题的检索，谷歌的表现水准无疑要甩百度几条街；所以善用搜索引擎的第一条原则必然是：<strong>一如既往毫不犹豫百折不挠的使用Google</strong>。而对于一名程序员来说，保证自己随时随地能访问Google，是最最基本的技能，哪怕花费少许金钱也是物超所值。那么以下就撇开百度、专门讲讲使用Google的小贴士。</p><h1 id="完整匹配"><a href="#完整匹配" class="headerlink" title="完整匹配"></a>完整匹配</h1><p>在Google的输入框里，所有的空格都被理解为加号。如果你输入的是<code>mysql foreign key</code>，那么返回的搜索结果里也许既有mysql存在，也有foreign key存在，但不一定有mysql foreign key存在。另外，过分常用的、单独存在没有意义的词汇往往被忽略掉，比如the/a/that等等。</p><p>如果你想要找含有<code>mysql foreign key</code>这个词组的文章，那么你必须在搜索词前后加上引号，输入<code>&quot;mysql foreign key&quot;</code>，不管你输入的时候使用的是全角字符<code>“</code>或者<code>”</code>还是半角字符<code>&quot;</code>，Google都照样能够正确处理。这就是引号的作用：返回完整匹配的结果。</p><h1 id="筛选"><a href="#筛选" class="headerlink" title="筛选"></a>筛选</h1><p>为了进一步筛选搜索结果，还需要学会另外一个符号 — 减号（-）。比如，<code>&quot;mysql foreign key&quot; - &quot;nodejs&quot;</code>就要求Google返回含有mysql foreign key但不存在nodejs的文章。</p><h1 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h1><p>另外一个程序员耳熟能详的符号是正则里最常露脸的星号，看到星号就下意识的想到通配符，在Google的搜索规则中也是如此，输入<code>&quot;mysql connect error *&quot;</code>就会返回所有已知的关于MySQL连接错误的文章。</p><h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>最后推荐一个威力无穷的语法，让你有机会再对搜索结果做一次筛选。比如针对程序员查bug，stackoverflow是我个人觉得可信度最高也最全面的一个网站，所以我就经常使用site的魔法，像<code>&quot;mysql foreign key&quot; site:stackoverflow.com</code>就会返回对应网站内所有关于mysql foreign key的文章。</p><h1 id="语言和日期"><a href="#语言和日期" class="headerlink" title="语言和日期"></a>语言和日期</h1><p>英语阅读能力不过关的人，遇到急事就不能一篇篇翻原版文档了，不得不求助国内的二手货；这时，Google界面上的一个小按钮就帮上大忙了：点击搜索工具 - 不限语言，下拉选择所有简体中文网页，一下子就回到了祖国母亲的怀抱。有时用新出的库版本，别忘了隔壁那个不限日期按钮，可以帮你找到最最新鲜的技术文章。</p><p><strong>Tab，以及宅男福利</strong></p><p>只限Chrome的一招：输入某个网址，再点击Tab，会能直接使用这个站点的站内搜索了，比别人快个几秒，关键时刻也很管用不是么。</p><p>最后留个福利吧，曾经被人偷偷问过，谷歌的安全搜索怎么关闭；网上有一些繁复的攻略，对我们程序员，搜索网址加个参数：<code>&amp;safe=off</code>，一招就可日天。</p><p>祝大家 Google 快乐。</p>]]></content>
      
      
      <categories>
          
          <category> Other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转 </tag>
            
            <tag> google </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
